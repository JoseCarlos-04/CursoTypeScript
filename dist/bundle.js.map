{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA,uDAAuD;AACvD;AACA;AACA;AACA,0MAA0M,cAAc;AACxN,8BAA8B,sBAAsB;AACpD,0BAA0B,YAAY,sBAAsB,qCAAqC,2CAA2C,MAAM;AAClJ,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,kCAAkC;AAClC,mBAAmB;AACnB;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA,eAAe,YAAY,EAAE,WAAW;AACxC;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,kBAAkB;AAClB;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,+CAA+C,eAAe,yCAAyC,eAAe;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,eAAe,OAAO,IAAI,aAAa,KAAK;AACzF;AACA,oBAAoB,iCAAiC;AACrD;AACA,mBAAmB,OAAO,IAAI,aAAa;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,4BAA4B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gBAAgB,YAAY;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,EAAE,UAAU,QAAQ,MAAM;AACzD;AACA;AACA,uBAAuB,QAAQ,QAAQ,MAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ,EAAE,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iBAAiB,QAAQ,eAAe;AACjF;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,wBAAwB,iBAAiB,8BAA8B,QAAQ;AAC1H;AACA;AACA,qCAAqC,wBAAwB,iBAAiB,8BAA8B,QAAQ;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA,6BAA6B,+CAA+C,KAAK,KAAK;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,qCAAqC,uBAAuB;AAC5D;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,+BAA+B;AACjE,kCAAkC,+BAA+B,kCAAkC,IAAI;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,4BAA4B,aAAa,OAAO,eAAe,YAAY,IAAI,kBAAkB,KAAK;AACtG,4BAA4B,aAAa,OAAO,eAAe,YAAY,IAAI,kBAAkB,KAAK;AACtG;AACA,yBAAyB,OAAO;AAChC;AACA,sBAAsB,SAAS;AAC/B;AACA;AACA,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;UE3bA;UACA;UACA;UACA;UACA","sources":["webpack://cursotypescript/./src/index.ts","webpack://cursotypescript/webpack/before-startup","webpack://cursotypescript/webpack/startup","webpack://cursotypescript/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconsole.log(\"Hola mundo\");\n/**\n * Tipos de datos\n *\n * string\n * number - enteros y decimales\n * boolean - true / false\n * null\n * undefined\n */\nvar nombre = \"José Carlos\"; // Variable global\nlet apellido = \"Parrilla Romero\"; // Variable normal\nconst PI = 3.1415; // Variable constante\nconsole.log(\"Hola \" + \" José Carlos\");\nconsole.log(nombre + apellido);\nconsole.log(nombre, apellido);\nconsole.log(`Hola ${nombre}`);\nlet a, b, c;\na = \"texto\";\nb = \"texto 2\";\nc = 6;\n// Array de Datos\nlet alumnos1A = [\"Juan\", \"José\", \"Alex\"];\nlet alumnos2A = [\"Fran\"];\nlet alumnos = [...alumnos1A, ...alumnos2A, \"Pablo\"];\nlet valores = [\"Hola\", 4];\nconsole.log(alumnos);\nlet misDatos = {\n    nombre: \"José\",\n    apellidos: \"Rodriguez\",\n    edad: 18\n};\nlet configuracion = Object.assign({ versionTS: \"Es6\", versionCodigo: \"1.0\" }, misDatos);\nlet propiedad1 = configuracion.versionTS;\nlet propiedad2 = configuracion.versionCodigo;\nconsole.log(`${propiedad1} ${propiedad2}`);\nvar EstadoTarea;\n(function (EstadoTarea) {\n    EstadoTarea[\"Pendiente\"] = \"P\";\n    EstadoTarea[\"En proceso\"] = \"E\";\n    EstadoTarea[\"Terminado\"] = \"T\";\n})(EstadoTarea || (EstadoTarea = {}));\n;\nlet estadoPendiente = EstadoTarea[\"En proceso\"];\nconsole.log(estadoPendiente);\nif (EstadoTarea[\"En proceso\"] == \"E\") {\n    console.log(EstadoTarea);\n}\nlet tarea1 = { nombre: \"Tarea 1\", prioridad: 2, estado: EstadoTarea[\"En proceso\"] };\nconsole.log(tarea1);\nlet empleado1 = { nombre: \"José\", edad: 18, sueldo: 15000 };\nconsole.log(empleado1);\nlet administrativo;\nadministrativo = { nombre: \"Paco\", edad: 20, sueldo: 50000, antiguedad: 4 };\nconsole.log(administrativo);\n//Operador Terniario\n//Condición ? verdadero : falso\nconsole.log(tarea1.estado == \"E\" ? `La tarea ${tarea1.nombre} se encuentra en ejecución` : `La tarea ${tarea1.nombre} aun no se ha entregado`);\nif (tarea1.estado == \"P\") {\n    console.log(\"Opción 1\");\n}\nelse if (tarea1.estado == \"T\") {\n    console.log(\"Opción 2\");\n}\nelse {\n    console.log(\"Opción 3\");\n}\nswitch (tarea1.estado) {\n    case \"P\":\n        console.log(\"Pendiente\");\n        break;\n    case \"E\":\n        console.log(\"En proceso\");\n        break;\n    default:\n        console.log(\"Otro estado o no tiene estado\");\n        break;\n        try {\n            let numero1 = 1;\n            console.log(numero1.toString);\n        }\n        catch (error) {\n            console.log(\"Se ha producido un error.\");\n        }\n}\n//Tipos de bucles:\nlet listaTareasNueva = [\n    {\n        nombre: \"Tarea 1\",\n        prioridad: 2,\n        estado: EstadoTarea.Terminado\n    },\n    {\n        nombre: \"Tarea 2\",\n        prioridad: 0,\n        estado: EstadoTarea.Pendiente\n    },\n    {\n        nombre: \"Tarea 3\",\n        prioridad: 15,\n        estado: EstadoTarea[\"En proceso\"]\n    }\n];\n//Bucle for-each\nlistaTareasNueva.forEach((tarea, index) => { console.log(`${index} - ${tarea.nombre}`); });\n//Bucle for\nfor (let index = 0; index < listaTareasNueva.length; index++) {\n    const tarea = listaTareasNueva[index];\n    console.log(`${index} - ${tarea.nombre}`);\n}\n;\n//Bucle while\nwhile (tarea1.estado !== EstadoTarea.Terminado) {\n    if (tarea1.prioridad == 5) {\n        tarea1.estado = EstadoTarea.Terminado;\n    }\n    else {\n        tarea1.prioridad++;\n    }\n    ;\n}\n;\n//Bucle do-while\ndo {\n    tarea1.prioridad++;\n    tarea1.estado = EstadoTarea.Terminado;\n} while (tarea1.estado !== EstadoTarea.Terminado);\n//Asignación múltiple de variables\nlet miTarea = {\n    titulo: \"Mi tarea\",\n    estado: EstadoTarea.Terminado,\n    prioridad: 1\n};\n//Declaración 1 a 1\nlet miTitulo = miTarea.titulo;\nlet miEstado = miTarea.estado;\nlet miPrioridad = miTarea.prioridad;\n//Declaración con factor de propagación\nlet { titulo, estado, prioridad } = miTarea;\nlet listaCompraLunes = [\"Leche\", \"Patatas\"];\nlet listaCompraMartes = [\"Huevos\", \"Pan\"];\nlet listaCompraSemana = [...listaCompraLunes, ...listaCompraMartes];\nlet estadoApp = {\n    usuario: \"admin\",\n    session: 3\n};\nlet nuevoEstadoApp = Object.assign(Object.assign({}, estadoApp), { session: 4 });\n//Funciones\n/**\n * Función que muestra un saludo por consola\n */\nfunction saludar() {\n    let nombre = \"Martín\";\n    console.log(`Hola ${nombre}`);\n}\n//Invocación de la función\nsaludar();\n/**\n * Función que muestra un saludo a una persona por consola\n *\n * @param nombre Nombre de la persona a saludar\n */\nfunction saludarPersona(nombre) {\n    console.log(`Hola ${nombre}`);\n}\nsaludarPersona(\"José\");\n/**\n * Función que muestra una despedida a una persona por consola\n *\n * @param nombre Nombre de la persona a despedir, por defecto será \"Pepe\"\n */\nfunction despedirPersona(nombre = \"Pepe\") {\n    console.log(`Adiós ${nombre}`);\n}\ndespedirPersona();\ndespedirPersona(\"Luis\");\n/**\n * Función que muestra una despedida a una persona por consola\n *\n * @param nombre (Opcional) Nombre de la persona a despedir\n */\nfunction despedidaOpcional(nombre) {\n    if (nombre) {\n        console.log(`Adiós ${nombre}`);\n    }\n    else {\n        console.log(\"Adiós\");\n    }\n}\ndespedidaOpcional();\ndespedidaOpcional(\"Juanjo\");\nfunction variosParams(nombre, apellido, edad = 18) {\n    if (apellido) {\n        console.log(`${nombre} ${apellido} tiene ${edad} años`);\n    }\n    else {\n        console.log(`${nombre} tiene ${edad} años`);\n    }\n}\nvariosParams(\"Martín\");\nvariosParams(\"Martín\", \"López\");\nvariosParams(\"Martín\", undefined, 30);\nvariosParams(\"Martín\", \"López\", 30);\nvariosParams(nombre = \"Martín\", apellido = \"López\"); //No me deja poner la edad\nfunction ejemploVariosTipos(a) {\n    if (typeof (a) === 'string') {\n        console.log(\"A es un String\");\n    }\n    else if (typeof (a) === 'number') {\n        console.log(\"A es un number\");\n    }\n    else {\n        console.log(\"A no es String ni number\");\n        throw Error(\"A no es String ni number\");\n    }\n}\nejemploVariosTipos(\"Hola\");\nejemploVariosTipos(3);\n/**\n *\n * @param nombre Nombre de la persona\n * @param apellidos Apellidos de la persona\n * @returns Nombre completo de la persona\n */\nfunction ejemploReturn(nombre, apellidos) {\n    return `${nombre} ${apellidos}`;\n}\nconst nombreCompleto = ejemploReturn(\"Martín\", \"López\");\nconsole.log(nombreCompleto);\nconsole.log(ejemploReturn(\"Martín\", \"López\"));\n/**\n * Función que muestra en consola una lista de nombres\n *\n * @param nombres Es una lista de nombres de String\n */\nfunction ejemploMultiParams(...nombres) {\n    nombres.forEach((nombre) => {\n        console.log(nombre);\n    });\n}\nejemploMultiParams(\"Martín\");\nejemploMultiParams(\"Martín\", \"Pepe\", \"Juan\", \"Alba\");\nconst lista = [\"Alberto\", \"Sandra\"];\nejemploMultiParams(...lista);\nfunction ejemploParamLista(nombres) {\n    nombres.forEach((nombre) => {\n        console.log(nombre);\n    });\n}\nejemploParamLista(lista);\nlet empleadoMartin = {\n    nombre: \"Martín\",\n    apellido: \"López\",\n    edad: 30\n};\nconst mostrarEmpleado = (empleado) => `${empleado.nombre} tiene ${empleado.edad} años`;\n//Llamamos a la función\nconsole.log(mostrarEmpleado(empleadoMartin));\nconst datosEmpleado = (empleado) => {\n    if (empleado.edad > 70) {\n        return `Empleado ${empleado.nombre} está en edad de jubilación`;\n    }\n    else {\n        return `Empleado ${empleado.nombre} está en edad laboral`;\n    }\n};\nconsole.log(datosEmpleado(empleadoMartin));\nconst obtenerSalario = (empleado, cobrar) => {\n    if (empleado.edad > 70) {\n        return;\n    }\n    else {\n        cobrar();\n    }\n};\nconst cobrarEmpleado = (empleado) => {\n    console.log(`${empleado.nombre} cobra su salario`);\n};\nobtenerSalario(empleadoMartin, () => 'Cobrar Martín');\n//Async Functions\nfunction ejemploAsync() {\n    return __awaiter(this, void 0, void 0, function* () {\n        yield console.log(\"Tarea a completar antes de seguir con la secuencia de instrucciones\");\n        console.log(\"Tarea completada\");\n        return `Completado`;\n    });\n}\nejemploAsync().then((respuesta) => {\n    console.log(\"Respuesta\", respuesta);\n}).catch((error) => {\n    console.log(\"Ha habido un error\", error);\n}).finally(() => `Todo ha terminado`);\n//Generators\nfunction* ejemploGenerator() {\n    //Yield --> para emitir valores\n    let index = 0;\n    while (index < 5) {\n        //Emitimos un valor incrementado\n        yield index++;\n    }\n}\n//Guardamos la función generadora en una variable\nlet generadora = ejemploGenerator();\n//Accedemos a los valores emitidos\nconsole.log(generadora.next().value);\nconsole.log(generadora.next().value);\nconsole.log(generadora.next().value);\nconsole.log(generadora.next().value);\n//Worker\nfunction* watcher(valor) {\n    yield valor; //Emitimos el valor inicial\n    yield* worker(valor); //Llamamos a las emisiones del worker para que emita otros valores\n    yield valor + 4;\n}\nfunction* worker(valor) {\n    yield valor + 1;\n    yield valor + 2;\n    yield valor + 3;\n}\nlet generatorSaga = watcher(0);\nconsole.log(generatorSaga.next().value);\nconsole.log(generatorSaga.next().value);\nconsole.log(generatorSaga.next().value);\nconsole.log(generatorSaga.next().value);\nconsole.log(generatorSaga.next().value);\n//Función anónimas\nlet fItera = function (elemento, indice) { console.log(`La tarea ${elemento.nombre} se encuentra en la posición ${indice} del array`); };\nlistaTareasNueva.forEach(fItera);\n//Más funciones arrow\nlet fArrow = (elemento, indice) => { console.log(`La tarea ${elemento.nombre} se encuentra en la posición ${indice} del array`); };\nlistaTareasNueva.forEach(fArrow);\n// CALLBACK\nlet fSuma = function suma(a, b) {\n    return a + b;\n};\nlet fResta = function resta(a, b) {\n    return a - b;\n};\nfunction opera(x, y, funcion) {\n    return funcion(x, y);\n}\nopera(1, 2, fSuma);\nopera(1, 2, fResta);\n// ASYNC FUNCTION\nfunction asincrona() {\n    return __awaiter(this, void 0, void 0, function* () {\n        let suma = 0;\n        for (let i = 0; i < 1000000000; i++) {\n            suma += i;\n        }\n        return suma;\n    });\n}\nasincrona().then((data) => { console.log(`El resultado de ejecutar asyc = ${data}`); });\nconsole.log(\"Línea de código posterior a llamada asíncrona\");\nfunction getDataUniversity() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = yield fetch(\"http://universities.hipolabs.com/search?country=Spain\");\n        let respuesta = yield data.json();\n        return respuesta;\n    });\n}\ngetDataUniversity().then((data) => { console.log(data[0]); });\nfunction getUniversitys() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = yield fetch(\"http://universities.hipolabs.com/search?country=Spain\");\n        let respuesta = yield data.json();\n        return respuesta;\n    });\n}\ngetUniversitys().then((data) => { console.log(data[0].domains); });\ngetUniversitys().then((data) => { data.forEach((universiad) => { console.log(universiad.domains); }); });\n// Funcion generadora\nfunction* fGeneradora() {\n    for (let tarea in listaTareasNueva) {\n        yield listaTareasNueva[tarea];\n    }\n}\nlet funcionGen = fGeneradora();\nconsole.log(funcionGen.next());\nconsole.log(funcionGen.next());\n// ASYNC GENERADORA\nfunction* fGeneradora2() {\n    yield \"Hola\";\n    yield \"Mundi\";\n    yield \"IES\";\n}\nlet llamadafgen2 = fGeneradora2();\nconsole.log(llamadafgen2.next());\nconsole.log(llamadafgen2.next());\nconsole.log(llamadafgen2.next());\nfunction obtenerDatosWeb() {\n    return __asyncGenerator(this, arguments, function* obtenerDatosWeb_1() {\n        let peticion = yield __await(fetch(\"https://haveibeenpwned.com/api/v2/breaches\"));\n        let datos = yield __await(peticion.json());\n        for (let i = 0; i < datos.length; i++) {\n            yield yield __await(datos[i]);\n        }\n        /*for(let index in datos){\n            yield datos[index];\n        }*/\n    });\n}\nlet datosWebPage = obtenerDatosWeb();\ndatosWebPage.next().then(({ value, done }) => { console.log(`${value.Name} - ${value.Description}`); });\ndatosWebPage.next().then(({ value, done }) => { console.log(`${value.Name} - ${value.Description}`); });\nfunction saludarSobrecarga(nombre, apellido, edad) {\n    let saludo = `Hola ${nombre}`;\n    if (apellido != undefined) {\n        saludo += ` ${apellido}`;\n    }\n    if (edad != undefined) {\n        saludo += ` ${edad}`;\n    }\n    return saludo;\n}\nconsole.log(saludarSobrecarga(\"José Carlos\"));\nconsole.log(saludarSobrecarga(\"José Carlos\", \"Parrilla Romero\"));\nconsole.log(saludarSobrecarga(\"José Carlos\", \"Parrilla Romero\", \"20\"));\nconsole.log(saludarSobrecarga(\"José Carlos\", \"Parrilla Romero\", 20));\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[\"./src/index.ts\"](0, __webpack_exports__);\n",""],"names":[],"sourceRoot":""}